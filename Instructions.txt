

create main.html 

#==============================================================================

Setup django-channels
----------------------

official documentations

https://channels.readthedocs.io/en/stable/installation.html


install library
>>> python -m pip install -U channels["daphne"]


install app in settings.py
----------------------------

INSTALLED_APPS = [
    
    "daphne",           # django-channels application
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'chat',
    

]


# past This code inside asgi.py 
--------------------------------

#remove all existing code inside asgi.py and past this code 


import os

from channels.routing import ProtocolTypeRouter
from django.core.asgi import get_asgi_application

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mysite.settings')
# Initialize Django ASGI application early to ensure the AppRegistry
# is populated before importing code that may import ORM models.
django_asgi_app = get_asgi_application()

application = ProtocolTypeRouter({
    "http": django_asgi_app,
    # Just HTTP for now. (We can add other protocols later.)
})




Configure our custom channels 
----------------------------

settings.py


ASGI_APPLICATION = 'mysite.asgi.application'




# for production 
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}



# for development

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    }
}





#=================================================================================

# define views 

views.py
---------


def main_view(request):

    context = {}
    return render(request , 'chat/main.html' , context)



#=================================================================================

# specify URL

application level url

urls.py 




#=================================================================================


# define Consumers 

create consumers.py inside applications directory


chat/consumers.py
------------------

from channels.generic.websocket import AsyncWebsocketConsumer
import json

class ChatConsumers(AsyncWebsocketConsumer):
    async def connect(self):
        self.room_group_name = 'Test-Room'

        await self.channel_layer.group_add(
            self.room_group_name,
            self.channel_name
        )
        await self.accept()



    async def disconnect(self , close_code):
        await self.channel_layer.group_discard(
            self.room_group_name,
            self.channel_name
        )

        print('Disconnected ')

    async def receive(self , text_data):
        receive_dict = json.loads(text_data)
        message = receive_dict['message']


        await self.channel_layer.group_send(
            self.room_group_name,
            {
                'type':"send.message",
                'message':message
            }
        )

    async def send_message(self , event):
        message = event[message]

        await self.send(text_data=json.dumps({
            'message':message
        }))

         


#=================================================================

# setup routing 


create routing.py inside application directory 


chat/routing.py
----------------


from django.urls import re_path
from . import consumers


websocket_urlpatterns = [
    re_path(r'' , consumers.ChatConsumers.as_asgi()),
]


#=================================================================

get all the video and audio using javascripts



























 
































